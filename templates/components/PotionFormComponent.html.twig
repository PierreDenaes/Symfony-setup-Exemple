
{{ form_start(form, {
            attr: {
                'data-turbo': 'true',
                'data-action': 'live#action:prevent',
                'data-live-action-param': 'saveProfile',
            }
        }) }}
        {{ form_row(form._token) }}

    {{ form_row(form.nom) }}
    {{ form_row(form.description) }}
    {{ form_row(form.minMagicalLevel) }}

    <h3>Ingrédients</h3>
    <ul id="ingredient-list" data-prototype="{{ form_widget(form.potionIngredients.vars.prototype)|e('html_attr') }}">
        {% for ingredient in form.potionIngredients %}
            <li>
                {{ form_widget(ingredient) }}
                <button type="button" class="remove-item btn btn-danger">Supprimer</button>
            </li>
        {% endfor %}
    </ul>
    <button type="button" class="add_item_link btn btn-secondary" data-collection-holder-class="ingredient-list">Ajouter un ingrédient</button>

    <h3>Étapes de préparation</h3>
    <ul id="etape-list" data-prototype="{{ form_widget(form.etapePreparations.vars.prototype)|e('html_attr') }}">
        {% for etape in form.etapePreparations %}
            <li>
                {{ form_widget(etape) }}
                <button type="button" class="remove-item btn btn-danger">Supprimer</button>
            </li>
        {% endfor %}
    </ul>
    <button type="button" class="add_item_link btn btn-secondary" data-collection-holder-class="etape-list">Ajouter une étape</button>

    <h3>Effets de la potion</h3>
    <ul id="effect-list" data-prototype="{{ form_widget(form.potionEffects.vars.prototype)|e('html_attr') }}">
        {% for effect in form.potionEffects %}
            <li>
                {{ form_widget(effect) }}
                <button type="button" class="remove-item btn btn-danger">Supprimer</button>
            </li>
        {% endfor %}
    </ul>
    <button type="button" class="add_item_link btn btn-secondary" data-collection-holder-class="effect-list">Ajouter un effet</button>

    <button type="submit" class="btn btn-success" >Soumettre</button>
{{ form_end(form, {'render_rest': false}) }}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.add_item_link').forEach(function (button) {
            button.addEventListener('click', function () {
                var collectionHolderClass = button.getAttribute('data-collection-holder-class');
                var collectionHolder = document.getElementById(collectionHolderClass);
                var item = document.createElement('li');
                var prototype = collectionHolder.getAttribute('data-prototype');
                var newItemHtml = prototype.replace(/__name__/g, collectionHolder.children.length);
                newItemHtml += '<button type="button" class="remove-item btn btn-danger">Supprimer</button>';
                item.innerHTML = newItemHtml;
                collectionHolder.appendChild(item);

                // Add remove button event listener
                item.querySelector('.remove-item').addEventListener('click', function() {
                    item.remove();
                });
            });
        });

        document.querySelectorAll('.remove-item').forEach(function(button) {
            button.addEventListener('click', function() {
                button.parentNode.remove();
            });
        });
    });
</script>
